总结一下这个程序的ui设计规则,以便下次我下程序的时候,直接可以使用这样的自然语言规则模板

下面是对当前剪贴板语音助手（clipboard_tts）界面与交互的“UI 设计规则总结”，并整理成一份可复用的“自然语言规则模板”。下次你做类似工具，只需按模板描述即可保持一致的体验与代码结构。

一、当前程序的 UI 设计原则总结
布局结构
主体采用 垂直分区（QSplitter + 多折叠面板 + 底部填充filler）。
面板顺序固定：顶部“设置”(紧凑) → 中间“语音模型” → 下方“日志” → 隐形“底部填充”。
全部折叠时：三块面板仅显示标题行，并紧贴窗口顶部（底部由 filler 吃掉空间，避免悬空居中）。
面板（CollapsibleBox）规范
标题行使用“► / ▼ + 标题”形式表示折叠/展开。
折叠高度 = 标题按钮 sizeHint().height()。
展开/折叠状态必须持久化（JSON 中 panel_states）。
设置面板为“紧凑型”：展开时高度不随剩余空间无限拉伸，有最大高度上限（MAX_COMPACT，当前 260）。
语音模型与日志面板：展开时可扩张并记忆用户拖拽分割条后的高度；折叠再展开恢复。
全部折叠时不保留多余空白；展开面板高度按“已记忆比例”或“均分”策略。
尺寸与伸缩策略
窗口允许横向拉伸（保留 minWidth），避免固定死宽度。
初始尺寸适中（如 640 × 780），最小高度约束避免内容拥挤。
分割条只控制高度；宽度不被内部控件强行撕裂。
组件内部统一边距：内容区常用 setContentsMargins(8,8,8,8)，行内复合区域去除多余嵌套间隔 (0,0,0,0)。
控件分组与信息区块
设置面板内逻辑组顺序：快捷键 → 音频设备 → 输出目录。
每个组前使用 QLabel 作为分节标题（如：“快捷键与转换:”）。
相关控件采用 QHBoxLayout 或 QVBoxLayout 简单组合，避免过深层次嵌套。
视觉与主题
避免硬编码背景/前景颜色，遵循系统 palette，保持深色/浅色主题兼容。
控件填充适度：树节点 item padding 2~4px；标题按钮粗体以区分层级。
使用统一箭头符号（► / ▼），不混用“+/-”或图标与文字混搭。
文本与语言
文案简洁，提示语采用口语式中文（“欢迎使用…”，“请至少勾选一个语音模型”）。
状态输出统一走日志区域，前缀带时间戳（HH:MM:SS）。
错误信息带 ⚠ 或“错误：”明确区分；成功不滥用图标。
日志区（Log Panel）
只读 QTextEdit，自动滚动到底部（保持最新输出可见）。
日志输出轻量，不写入 UI 队列阻塞，内部统一走 self.log() 方法（增强可替换性）。
可考虑限制行数（未来扩展）或提供“清空”按钮（可选）。
语音树（Voice Tree）
三级结构：区域 → 语言 → 具体语音。
复选逻辑支持父节点半选（AutoTristate）。
列顺序固定：“名称 / 性别 / 类别(Locale) / 个性(Style)”。
默认展开与中文相关的层级以减少首次操作成本。
快捷键录制
录制按钮进入“录制中… (Esc取消)”状态，成功后显示格式化组合（Ctrl + Shift + A 风格）。
设置新快捷键后重新绑定监听；原绑定需清理。
防抖：同内容 / 热键频繁触发有时间间隔限制（MIN_HOTKEY_INTERVAL / MIN_SAME_TEXT_INTERVAL）。
音频输出与播放
设备下拉：第一个选项提供“禁用”语义，不触发播放而是复制文件路径。
虚拟声卡检测（VB-CABLE）→ 成功显示 ✅，失败显示提示 + 可点击下载。
监听与主设备同时播放时并行启动线程，不串行。
输出文件策略
自定义命名：文本内容（截断+哈希去冲突） + (语音模型) + 扩展名。
非自定义目录：使用临时目录 + “tts_时间戳_前20字符”。
文件存在自动追加 _1/_2 递增。
持久化（settings 文件）
JSON 中字段：hotkey / checked_voices / output_device_id / monitor_device_id / output_dir_enabled / output_dir_path / panel_states / splitter_sizes / saved_panel_sizes / panel_order。
兼容老版本：缺失字段使用默认值（dataclass + default_factory）。
仅保存前三个面板高度（忽略 filler）。
交互节奏与反馈
所有长任务（TTS 合成 / 播放）放在 QThread 或线程池中，通过信号回主线程更新。
转换进行中禁用“立即转换”按钮，结束后恢复。
失败的 TTS 显示具体异常信息，必要时附加“可能是区域限制”。
错误与健壮性
全局异常 hook 写入 crash log，不弹阻塞框。
关键路径（TTS、设备刷新）内部 try/except 捕获并软失败。
401 / Unauthorized 触发刷新鉴权并重试一次。
可维护性与扩展
命名统一：UI 容器以 box / layout / frame / *_group 结尾。
逻辑功能分区：TTSWorker / AudioPlayer / ClipboardTTSApp / AppSettings / CollapsibleBox。
便于后续：可独立拆分 voice loader / device manager / log system。
性能与体验
首次启动异步/顺序加载语音列表（失败 fallback 到内置最小集合）。
避免在 UI 线程执行阻塞 I/O；合成、读取、写入都放外部线程。
语音合成默认顺序模式（PARALLEL_TTS=False）防止服务端限流。
折叠与高度记忆逻辑
展开时更新 _panel_saved_sizes；折叠后不丢失上次尺寸。
全部折叠 → 强制 sizes = [header, header, header, filler]。
恢复时重新按总高度计算 scale，适配窗口尺寸变化。
二、可复用的“自然语言 UI 规则模板”
以下模板可直接复制，在下一次新项目开头写下：“本应用 UI 需遵循以下规则：”

UI 设计规则（模板）

布局与结构
使用垂直方向主分割器（或等价机制）组织 N 个功能面板，顺序依次为：{面板1(紧凑)} → {面板2(主内容)} → {面板3(日志/状态)} → {底部填充区}。
当所有面板折叠时，它们必须贴靠窗口顶部，剩余空间由底部填充区吸收。
折叠面板行为
每个面板带有可切换按钮，标题格式：“► 标题”/“▼ 标题”。
折叠高度 = 标题控件高度；展开时按“记忆高度”或“均分”策略分配空间。
顶部面板为紧凑型，设置最大高度（如 240~300），不参与弹性平均。
展开/折叠状态与用户调整的高度需持久化。
窗口与尺寸策略
窗口可横向拉伸；提供合理最小宽高（如 minWidth ≥ 560, minHeight ≥ 640）。
初始化采用中性尺寸；禁止因内容刷新突兀改变窗口大小。
分割尺寸数组保存时仅保存“功能面板”部分，不保存 filler 占位。
控件与分组
设置面板内分组顺序：快捷键 → 设备 → 输出 → （可选：高级）。
每组有前缀标签标题，组之间保持统一垂直间距（8~12px）。
控件内边距统一（内容 8px，紧凑行 0px），不硬编码颜色。
文案与反馈
所有动态状态、错误、提示统一输出到日志区域，且带时间戳。
错误信息前缀使用 “错误：” 或 “⚠”；成功/步骤提示简洁。
不使用阻塞弹窗处理常规错误（除严重初始化失败）。
快捷键与触发防抖
录制模式显式提示“录制中…(Esc取消)”。
同一文本重复触发加时间间隔限制；热键触发也设置防抖秒数。
并发请求受控，不允许重入（使用锁/状态标记）。
任务与线程
长耗时操作（网络 / 音频合成 / 文件写入）放后台线程或协程。
UI 更新通过信号/回调回到主线程执行。
任务完成后恢复按钮交互状态。
输出文件命名
自定义命名：文本截断 + 哈希防冲突 + (语音名) + 后缀。
默认命名：前缀 + 时间戳 + 前若干字符。
已存在文件自动 _1 / _2 递增。
状态持久化
使用 JSON 存储以下字段：\n hotkey / checked_voices / device_ids / output_dir_enabled / output_dir_path / panel_states / splitter_sizes / saved_panel_sizes / panel_order\n- 缺失字段时使用默认值，不抛异常。
读取失败时日志提示并继续启动（降级运行）。
日志面板规则
自动滚动到底部；可扩展“最大行数”清理策略。
所有内部 print 可切换到统一调试开关（DEBUG_PRINT）。
设备与外部资源
设备列表刷新保持用户选择（基于 device id / name 匹配）。
特定虚拟设备（如 VB-CABLE）检测后以 ✅ 或提示链接显示。
不阻塞 UI 等待设备完成刷新。
面板扩展与新增规范
新增面板时：复用 CollapsibleBox，注册 toggled 更新尺寸，加入保存/恢复字段。
若新增重型功能（如“批量任务”），优先放在中部主内容面板之后，日志之前。
逻辑模块应可独立抽离为类：XxxManager / XxxService。
错误保护与日志
全局异常 hook 写入 crash.log；运行状态写 runtime.log。
用户操作（热键 / 按钮）触发异常时写入日志并不中断主循环。
可访问性与兼容性（可选增强）
按钮文本清晰，不只用图标表达语义。
尽量避免绝对字号；跟随系统 DPI 缩放。
不硬编码浅色系背景，适配暗色模式。
性能与体验
首次加载外部资源失败时提供 fallback 集合而不是阻塞。
大型列表（如语音）支持延迟加载或筛选（可在后期追加）。
命名规范（代码层面）
UI 实例：voice_box / settings_box / log_box / bottom_filler。
状态布尔：xxx_enabled / is_xxx / has_xxx。
保存结构：AppSettings 数据类集中管理。
可选增强（未来扩展区占位）
支持“一键全部展开/折叠”
增加搜索过滤语音
增加日志导出按钮
增加播放进度或队列可视化
国际化 i18n 钩子预留
三、快速复用示例（一句话集成）
本应用 UI 采用“顶部紧凑控制 + 中部主功能 + 底部日志 + 自动填充余量”四段式结构；所有面板可折叠并持久化状态，全部折叠时贴顶显示，交互反馈统一输出到日志区，长任务不阻塞主线程，窗口宽度可调，设置区高度受限，语音与日志区域记忆拖动高度并在恢复时按比例适配。

四、如果下次你给一个新需求 你可以直接开头写： “请按我既有的剪贴板语音助手 UI 规则实现界面（见：顶部紧凑设置 + 折叠面板 + 高度记忆 + filler 贴顶策略 + JSON 持久化模板）。”

我也可以为这个规则模板生成一个 README 或注释头文件，需要的话告诉我。

要不要我：

生成一个独立 UI_RULES.md 文件？
再补一个“如何新增面板”的示例片段？
提供一个最小骨架工程模版？
直接告诉我你的下一步。